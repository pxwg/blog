---
// Import the global.css file here so that it is included on
// all pages through the use of the <BaseHead /> component.
import "$styles/global.css";
import "$styles/font.css";
import interWoff2 from '@fontsource-variable/inter/files/inter-latin-opsz-normal.woff2?url';
import interItalicWoff2 from '@fontsource-variable/inter/files/inter-latin-wght-italic.woff2?url';

import { kUrlBase, kSiteTitle, kServers, kEnableBackend } from "$consts";
import { ThemeInit } from "@myriaddreamin/tylant-theme-toggle";

interface Props {
  title: string;
  description: string;
  image?: string;
}

const canonicalURL = new URL(Astro.url.pathname, Astro.site);

const { title, description, image = "/blog-heading.webp" } = Astro.props;
---

<!-- Global Metadata -->
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<link rel="icon" type="image/svg+xml" href={`${kUrlBase}/favicon.svg`} />
<link rel="sitemap" href={`${kUrlBase}/sitemap-index.xml`} />
<link
  rel="alternate"
  type="application/rss+xml"
  title={kSiteTitle}
  href={new URL("rss.xml", Astro.site)}
/>
<meta name="generator" content={Astro.generator} />


<!-- Canonical URL -->
<link rel="canonical" href={canonicalURL} />

<!-- Primary Meta Tags -->
<title>{title}</title>
<meta name="title" content={title} />
<meta name="description" content={description} />

<!-- Open Graph / Facebook -->
<meta property="og:type" content="website" />
<meta property="og:url" content={Astro.url} />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta property="og:image" content={new URL(image, Astro.url)} />
<meta property="og:image:alt" content="Kamiya's Character Design" />

<!-- Twitter -->
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content={Astro.url} />
<meta property="twitter:title" content={title} />
<meta property="twitter:description" content={description} />
<meta property="twitter:image" content={new URL(image, Astro.url)} />
<meta property="twitter:image:alt" content="Kamiya's Character Design" />

<link rel="preload" as="font" type="font/woff2" href={interWoff2} crossorigin="anonymous" />
<link rel="preload" as="font" type="font/woff2" href={interItalicWoff2} crossorigin="anonymous" />

<ThemeInit/>

<!-- Backend Support -->
{kEnableBackend && <script is:inline define:vars={{ kServers }}>
  window.postServer = (url, opts) => {
    const { headers, body, doAlert, method } = opts || {};
    const errors = [];
    let lastResponse = undefined;
    return kServers
      .reduce((promise, server) => {
        return promise.then((resolved) => {
          if (resolved) {
            return Promise.resolve(true);
          }

          return fetch(server + url, {
            method: method || "POST",
            headers,
            body,
          })
            .then((response) => {
               lastResponse = response;
              if (!response.ok) {
                errors.push(
                  `Failed to send: ${response.statusText} (${text.trim()})`
                );
                return false;
              } else {
                return true;
              }
            })
            .catch((error) => {
              errors.push(`"Exception when sending: ${error}`);
              return false;
            });
        });
      }, Promise.resolve(false))
      .then((resolved) => {
        if (!resolved) {
          const msg = errors.join("\n");

          if (doAlert) {
            alert(msg);
          }
          throw new Error(msg);
        }
        return lastResponse;
      });
  };
</script>}
