---
import { getCurrentLanguage, generateLanguageToggleUrl, translations } from "$utils/i18n";

interface Props {
  articleId?: string;
}

const { articleId } = Astro.props;

// Get current locale from URL
const currentLocale = getCurrentLanguage(Astro.url.pathname);

// Generate language toggle URL - switch to the opposite language
const targetLocale = currentLocale === 'en' ? 'zh' : 'en';
const toggleUrl = generateLanguageToggleUrl(Astro.url.pathname, targetLocale);
---

<div class="language-toggle">
  <a
    href={toggleUrl}
    class="lang-link"
    title={currentLocale === 'en' ? translations.switchToChinese : translations.switchToEnglish}
    aria-label={currentLocale === 'en' ? "Switch to Chinese" : "Switch to English"}
    data-lang={currentLocale === 'en' ? "zh" : "en"}
  >
    {currentLocale === 'en' ? "中文" : "EN"}
  </a>
</div>

<style>
  .language-toggle {
    display: flex;
    align-items: center;
    gap: 0.5em;
    font-size: 0.9em;
    position: relative;
    z-index: 10;
    right: 9px;
  }
  
  .lang-link {
    color: var(--gray-color);
    text-decoration: none;
    padding: 0.25em .5em;
    border-radius: 3px;
    transition: color .2s, background-color .2s, border-bottom .2s;
    font-weight: 300;
    border-bottom: 2px solid transparent;
    background: none;
    border: none;
    cursor: pointer;
    font-family: inherit;
    font-size: inherit;
  }
  
  .lang-link:hover {
    color: var(--main-hover-color);
  }
  
  html[lang="zh"] .language-toggle .lang-link[data-lang="zh"],
  /* When the html tag has lang="en", highlight the English link. */
  html[lang="en"] .language-toggle .lang-link[data-lang="en"] {
    color: var(--accent);
    font-weight: 400;
    border-bottom-color: var(--accent);
    text-decoration: underline;
  }
  
  .separator {
    color: var(--gray-color);
    opacity: 0.5;
    font-weight: 300;
  }
</style>
