---
import { kUrlBase } from "$consts";

interface Props {
  articleId?: string;
}

const { articleId } = Astro.props;

// Get current locale from URL
const currentLocale = Astro.url.pathname.startsWith('/zh/') ? 'zh' : 'en';

// Generate language toggle links
function getLanguageLinks() {
  const currentPath = Astro.url.pathname;

  // Handle article pages
  const articleMatch = currentPath.match(/\/(en|zh)\/article\/([^/]+)/);
  if (articleMatch) {
    const currentLang = articleMatch[1];
    const articleSlug = articleMatch[2];
    const targetLang = currentLang === 'en' ? 'zh' : 'en';

    return {
      zh: `${kUrlBase}/zh/article/${articleSlug}/`,
      en: `${kUrlBase}/en/article/${articleSlug}/`,
      current: currentLang,
    };
  }

  // Handle other pages
  const pageMatch = currentPath.match(/\/(en|zh)\/([^/]*)/);
  if (pageMatch) {
    const currentLang = pageMatch[1];
    const pagePath = pageMatch[2] || '';
    const targetLang = currentLang === 'en' ? 'zh' : 'en';

    return {
      zh: `${kUrlBase}/zh/${pagePath}`,
      en: `${kUrlBase}/en/${pagePath}`,
      current: currentLang,
    };
  }

  // Handle about page
  if (currentPath.includes('/about')) {
    return {
      zh: `${kUrlBase}/zh/about/`,
      en: `${kUrlBase}/en/about/`,
      current: currentPath.includes('/zh/') ? 'zh' : 'en',
    };
  }

  // Default case (English home page)
  return {
    zh: `${kUrlBase}/zh/`,
    en: `${kUrlBase}/en/`,
    current: 'en',
  };
}

const links = getLanguageLinks();
---

<div class="language-toggle">
  <a
    href={links.zh}
    class="lang-link"
    title="切换到中文"
    aria-label="Switch to Chinese"
    data-lang="zh"
  >
    中文
  </a>
  <span class="separator" aria-hidden="true">|</span>
  <a
    href={links.en}
    class="lang-link"
    title="Switch to English"
    aria-label="Switch to English"
    data-lang="en"
  >
    EN
  </a>
</div>

<style>
  .language-toggle {
    display: flex;
    align-items: center;
    gap: 0.5em;
    font-size: 0.9em;
    position: relative;
    z-index: 10;
    right: 9px;
  }
  
  .lang-link {
    color: var(--gray-color);
    text-decoration: none;
    padding: 0.25em .5em;
    border-radius: 3px;
    transition: color .2s, background-color .2s, border-bottom .2s;
    font-weight: 300;
    border-bottom: 2px solid transparent;
    background: none;
    border: none;
    cursor: pointer;
    font-family: inherit;
    font-size: inherit;
  }
  
  .lang-link:hover {
    color: var(--main-hover-color);
  }
  
  html[lang="zh"] .language-toggle .lang-link[data-lang="zh"],
  /* When the html tag has lang="en", highlight the English link. */
  html[lang="en"] .language-toggle .lang-link[data-lang="en"] {
    color: var(--accent);
    font-weight: 400;
    border-bottom-color: var(--accent);
    text-decoration: underline;
  }
  
  .separator {
    color: var(--gray-color);
    opacity: 0.5;
    font-weight: 300;
  }
</style>
