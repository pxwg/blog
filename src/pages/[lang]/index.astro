---
import { getCollection } from "astro:content";
import  TagList  from "$components/TagList.astro";
import BaseHead from "$components/BaseHead.astro";
import Header from "$components/Header.astro";
import Footer from "$components/Footer.astro";
import FormattedDate from "$components/FormattedDate.astro";
import {
  kSiteTitle,
  kSiteIndexTitle,
  kSiteDescription,
  kUrlBase,
  kBaiduVeriCode,
} from "$consts";
// @ts-ignore
import AboutContent from "../../../content/other/intro.typ?html&body";
import "$styles/IndexPostList.css";
import { getGitModifiedDate } from "../../utils/git";
import { getSafeLanguageConfig } from "$utils/i18n";

export async function getStaticPaths() {
  return [
    { params: { lang: "en" } },
    { params: { lang: "zh" } }
  ];
}

const allPosts = (await getCollection("blog"))

const { lang } = Astro.params;

const postsWithModifiedDate = allPosts.map(post => {
  const modifiedDate = getGitModifiedDate(post.id, {
    contentDir: 'content/article',
    fileExtension: '.typ',
    fallbackDate: post.data.date,
    debug: true
  });

  return {
    ...post,
    data: {
      ...post.data,
      modifiedDate
    }
  };
});


const recentPosts = postsWithModifiedDate.sort(
  (a, b) => b.data.date.valueOf() - a.data.date.valueOf()
);

const posts = recentPosts.filter(post => post.id.startsWith(`${lang}/`)).slice(0, 5);

const config = getSafeLanguageConfig('index', lang as any);

---

<!doctype html>
<html lang={config.htmlLang}>
  <head>
    <BaseHead title={kSiteTitle} description={kSiteDescription} />
    {
      kBaiduVeriCode && (
        <meta name="baidu-site-verification" content={kBaiduVeriCode} />
      )
    }
    <style>
      .comments a { display: inline-block; }
      @media (max-width: 600px) { .posts .heading { display: flex; flex-direction: column; } }
      .comment-item { background-color: var(--main-bg-color); }
      .monthly li { font-style: italic; }
    </style>
  </head>
  <body>
    <Header />
    <main>
      <section aria-label="Prelude">
        <h1 set:html={kSiteIndexTitle} />
        <AboutContent />
      </section>
      <section aria-label="Recent Posts">
        <h2 id="recent-posts-title">
          {config.title}
        </h2>
        <ul class="accent block-list posts">
          {
            posts.map((post) => {
              const postUrl = `${kUrlBase}/${lang}/article/${post.id.replace(`${lang}/`, '')}/`;
              return (
                <li
                  data-article-id={post.id}
                  data-article-meta={JSON.stringify({
                    title: post.data.title,
                    description: post.data.description,
                    tags: post.data.tags,
                    date: post.data.date.toISOString(),
                    modifiedDate: post.data.modifiedDate ? post.data.modifiedDate.toISOString() : null
                  })}
                >
                <li>
                  <a class="heading" href={postUrl}>
                    <h2><span class="title">{post.data.title}</span></h2>
                      <span class="date"><FormattedDate date={post.data.date} /> âœŽ <FormattedDate date={post.data.modifiedDate}/></span>
                  </a>
                  {post.data.tags && <TagList tags={post.data.tags} lang="zh"/>}
                  {post.data.description || ""}
                </li>
              );
            })
          }
        </ul>
      </section>
    </main>
    <Footer />
  </body>
</html>
